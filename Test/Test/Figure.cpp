#include "Figure.h"

Figure::Figure(): Figure(XY(0)) {}
Figure::Figure(XY xy): Figure(xy, sf::Color::Red) {}
Figure::Figure(XY xy, float radius): Figure(xy, radius, sf::Color::Red) {}
Figure::Figure(XY xy, sf::Color rgba): Figure(xy, 10.f, rgba) {}
//-----------------------------------------------------------------------------------------------------------------------------------------------
Figure::Figure(XY xy, float radius, sf::Color rgba): trace(0), dot(xy), scale(1.f), angle(0.f), color(rgba), radius(radius) {
	this->SetFocus(false);
	this->SetTrace(false);
	this->SetTouch(false);
	this->SetVisible(true);
}
//-----------------------------------------------------------------------------------------------------------------------------------------------
bool Figure::GetFocus() const {
	return this->isFocused;
}
//-----------------------------------------------------------------------------------------------------------------------------------------------
void Figure::SetFocus(bool focus) {
	set(this->isFocused, focus);
}
//-----------------------------------------------------------------------------------------------------------------------------------------------
bool Figure::GetVisible() const {
	return this->isVisible;
}
//-----------------------------------------------------------------------------------------------------------------------------------------------
void Figure::SetVisible(bool visible) {
	set(this->isVisible, visible);
}
//-----------------------------------------------------------------------------------------------------------------------------------------------
bool Figure::GetTrace() const {
	return this->isTraced;
}
//-----------------------------------------------------------------------------------------------------------------------------------------------
void Figure::SetTrace(bool trace) {
	set(this->isTraced, trace);
}
//-----------------------------------------------------------------------------------------------------------------------------------------------
bool Figure::GetTouch() const {
	return this->isTouched;
}
//-----------------------------------------------------------------------------------------------------------------------------------------------
void Figure::SetTouch(bool touch) {
	set(this->isTouched, touch);
}
//-----------------------------------------------------------------------------------------------------------------------------------------------
size_t Figure::getTraceNum() const {
	return this->trace;
}
//-----------------------------------------------------------------------------------------------------------------------------------------------
void Figure::SetTraceNum(size_t trace) {
	this->trace = trace;
}
//-----------------------------------------------------------------------------------------------------------------------------------------------
std::vector<History> Figure::GetHistory() const {
	return this->history;
}
//-----------------------------------------------------------------------------------------------------------------------------------------------
void Figure::SetRadius(float radius) {
	this->radius = radius;
}
//-----------------------------------------------------------------------------------------------------------------------------------------------
float Figure::GetRadius() const {
	return this->radius;
}
//-----------------------------------------------------------------------------------------------------------------------------------------------
void Figure::set(bool& first, const bool& second) {
	if (first != second) first = second;
}
//-----------------------------------------------------------------------------------------------------------------------------------------------
Figure::~Figure() = default;